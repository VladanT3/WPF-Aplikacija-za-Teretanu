#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teretana
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Teretana")]
	public partial class TeretanaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClanarina(Clanarina instance);
    partial void UpdateClanarina(Clanarina instance);
    partial void DeleteClanarina(Clanarina instance);
    partial void InsertDobavljac(Dobavljac instance);
    partial void UpdateDobavljac(Dobavljac instance);
    partial void DeleteDobavljac(Dobavljac instance);
    partial void InsertKlijent(Klijent instance);
    partial void UpdateKlijent(Klijent instance);
    partial void DeleteKlijent(Klijent instance);
    partial void InsertPorudzbenica(Porudzbenica instance);
    partial void UpdatePorudzbenica(Porudzbenica instance);
    partial void DeletePorudzbenica(Porudzbenica instance);
    partial void InsertProizvod(Proizvod instance);
    partial void UpdateProizvod(Proizvod instance);
    partial void DeleteProizvod(Proizvod instance);
    partial void InsertRacun(Racun instance);
    partial void UpdateRacun(Racun instance);
    partial void DeleteRacun(Racun instance);
    partial void InsertRadnik(Radnik instance);
    partial void UpdateRadnik(Radnik instance);
    partial void DeleteRadnik(Radnik instance);
    partial void InsertStavkaPorudzbenice(StavkaPorudzbenice instance);
    partial void UpdateStavkaPorudzbenice(StavkaPorudzbenice instance);
    partial void DeleteStavkaPorudzbenice(StavkaPorudzbenice instance);
    partial void InsertStavkaRacuna(StavkaRacuna instance);
    partial void UpdateStavkaRacuna(StavkaRacuna instance);
    partial void DeleteStavkaRacuna(StavkaRacuna instance);
    #endregion
		
		public TeretanaDataContext() : 
				base(global::Teretana.Properties.Settings.Default.TeretanaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TeretanaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeretanaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeretanaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeretanaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clanarina> Clanarinas
		{
			get
			{
				return this.GetTable<Clanarina>();
			}
		}
		
		public System.Data.Linq.Table<Dobavljac> Dobavljacs
		{
			get
			{
				return this.GetTable<Dobavljac>();
			}
		}
		
		public System.Data.Linq.Table<Klijent> Klijents
		{
			get
			{
				return this.GetTable<Klijent>();
			}
		}
		
		public System.Data.Linq.Table<Porudzbenica> Porudzbenicas
		{
			get
			{
				return this.GetTable<Porudzbenica>();
			}
		}
		
		public System.Data.Linq.Table<Proizvod> Proizvods
		{
			get
			{
				return this.GetTable<Proizvod>();
			}
		}
		
		public System.Data.Linq.Table<Racun> Racuns
		{
			get
			{
				return this.GetTable<Racun>();
			}
		}
		
		public System.Data.Linq.Table<Radnik> Radniks
		{
			get
			{
				return this.GetTable<Radnik>();
			}
		}
		
		public System.Data.Linq.Table<StavkaPorudzbenice> StavkaPorudzbenices
		{
			get
			{
				return this.GetTable<StavkaPorudzbenice>();
			}
		}
		
		public System.Data.Linq.Table<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this.GetTable<StavkaRacuna>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clanarina")]
	public partial class Clanarina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClanarinaID;
		
		private string _NazivClanarine;
		
		private double _CenaClanarine;
		
		private int _BrojTermina;
		
		private EntitySet<Klijent> _Klijents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClanarinaIDChanging(string value);
    partial void OnClanarinaIDChanged();
    partial void OnNazivClanarineChanging(string value);
    partial void OnNazivClanarineChanged();
    partial void OnCenaClanarineChanging(double value);
    partial void OnCenaClanarineChanged();
    partial void OnBrojTerminaChanging(int value);
    partial void OnBrojTerminaChanged();
    #endregion
		
		public Clanarina()
		{
			this._Klijents = new EntitySet<Klijent>(new Action<Klijent>(this.attach_Klijents), new Action<Klijent>(this.detach_Klijents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanarinaID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClanarinaID
		{
			get
			{
				return this._ClanarinaID;
			}
			set
			{
				if ((this._ClanarinaID != value))
				{
					this.OnClanarinaIDChanging(value);
					this.SendPropertyChanging();
					this._ClanarinaID = value;
					this.SendPropertyChanged("ClanarinaID");
					this.OnClanarinaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivClanarine", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivClanarine
		{
			get
			{
				return this._NazivClanarine;
			}
			set
			{
				if ((this._NazivClanarine != value))
				{
					this.OnNazivClanarineChanging(value);
					this.SendPropertyChanging();
					this._NazivClanarine = value;
					this.SendPropertyChanged("NazivClanarine");
					this.OnNazivClanarineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaClanarine", DbType="Float NOT NULL")]
		public double CenaClanarine
		{
			get
			{
				return this._CenaClanarine;
			}
			set
			{
				if ((this._CenaClanarine != value))
				{
					this.OnCenaClanarineChanging(value);
					this.SendPropertyChanging();
					this._CenaClanarine = value;
					this.SendPropertyChanged("CenaClanarine");
					this.OnCenaClanarineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojTermina", DbType="Int NOT NULL")]
		public int BrojTermina
		{
			get
			{
				return this._BrojTermina;
			}
			set
			{
				if ((this._BrojTermina != value))
				{
					this.OnBrojTerminaChanging(value);
					this.SendPropertyChanging();
					this._BrojTermina = value;
					this.SendPropertyChanged("BrojTermina");
					this.OnBrojTerminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clanarina_Klijent", Storage="_Klijents", ThisKey="ClanarinaID", OtherKey="ClanarinaID")]
		public EntitySet<Klijent> Klijents
		{
			get
			{
				return this._Klijents;
			}
			set
			{
				this._Klijents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klijents(Klijent entity)
		{
			this.SendPropertyChanging();
			entity.Clanarina = this;
		}
		
		private void detach_Klijents(Klijent entity)
		{
			this.SendPropertyChanging();
			entity.Clanarina = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dobavljac")]
	public partial class Dobavljac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DobavljacID;
		
		private string _NazivDobavljaca;
		
		private string _Email;
		
		private string _BrojTelefona;
		
		private string _Adresa;
		
		private EntitySet<Porudzbenica> _Porudzbenicas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDobavljacIDChanging(string value);
    partial void OnDobavljacIDChanged();
    partial void OnNazivDobavljacaChanging(string value);
    partial void OnNazivDobavljacaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBrojTelefonaChanging(string value);
    partial void OnBrojTelefonaChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    #endregion
		
		public Dobavljac()
		{
			this._Porudzbenicas = new EntitySet<Porudzbenica>(new Action<Porudzbenica>(this.attach_Porudzbenicas), new Action<Porudzbenica>(this.detach_Porudzbenicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DobavljacID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DobavljacID
		{
			get
			{
				return this._DobavljacID;
			}
			set
			{
				if ((this._DobavljacID != value))
				{
					this.OnDobavljacIDChanging(value);
					this.SendPropertyChanging();
					this._DobavljacID = value;
					this.SendPropertyChanged("DobavljacID");
					this.OnDobavljacIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivDobavljaca", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivDobavljaca
		{
			get
			{
				return this._NazivDobavljaca;
			}
			set
			{
				if ((this._NazivDobavljaca != value))
				{
					this.OnNazivDobavljacaChanging(value);
					this.SendPropertyChanging();
					this._NazivDobavljaca = value;
					this.SendPropertyChanged("NazivDobavljaca");
					this.OnNazivDobavljacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojTelefona", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrojTelefona
		{
			get
			{
				return this._BrojTelefona;
			}
			set
			{
				if ((this._BrojTelefona != value))
				{
					this.OnBrojTelefonaChanging(value);
					this.SendPropertyChanging();
					this._BrojTelefona = value;
					this.SendPropertyChanged("BrojTelefona");
					this.OnBrojTelefonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dobavljac_Porudzbenica", Storage="_Porudzbenicas", ThisKey="DobavljacID", OtherKey="DobavljacID")]
		public EntitySet<Porudzbenica> Porudzbenicas
		{
			get
			{
				return this._Porudzbenicas;
			}
			set
			{
				this._Porudzbenicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Porudzbenicas(Porudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Dobavljac = this;
		}
		
		private void detach_Porudzbenicas(Porudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Dobavljac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klijent")]
	public partial class Klijent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KlijentID;
		
		private string _Ime;
		
		private string _Prezime;
		
		private string _Email;
		
		private string _Sifra;
		
		private System.DateTime _DatumRodjenja;
		
		private string _Adresa;
		
		private string _BrojTelefona;
		
		private string _ClanarinaID;
		
		private System.DateTime _DatumPocetkaClanarine;
		
		private System.DateTime _DatumIstekaClanarine;
		
		private int _BrojTermina;
		
		private EntitySet<Racun> _Racuns;
		
		private EntityRef<Clanarina> _Clanarina;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKlijentIDChanging(int value);
    partial void OnKlijentIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnDatumRodjenjaChanging(System.DateTime value);
    partial void OnDatumRodjenjaChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnBrojTelefonaChanging(string value);
    partial void OnBrojTelefonaChanged();
    partial void OnClanarinaIDChanging(string value);
    partial void OnClanarinaIDChanged();
    partial void OnDatumPocetkaClanarineChanging(System.DateTime value);
    partial void OnDatumPocetkaClanarineChanged();
    partial void OnDatumIstekaClanarineChanging(System.DateTime value);
    partial void OnDatumIstekaClanarineChanged();
    partial void OnBrojTerminaChanging(int value);
    partial void OnBrojTerminaChanged();
    #endregion
		
		public Klijent()
		{
			this._Racuns = new EntitySet<Racun>(new Action<Racun>(this.attach_Racuns), new Action<Racun>(this.detach_Racuns));
			this._Clanarina = default(EntityRef<Clanarina>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlijentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KlijentID
		{
			get
			{
				return this._KlijentID;
			}
			set
			{
				if ((this._KlijentID != value))
				{
					this.OnKlijentIDChanging(value);
					this.SendPropertyChanging();
					this._KlijentID = value;
					this.SendPropertyChanged("KlijentID");
					this.OnKlijentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumRodjenja", DbType="Date NOT NULL")]
		public System.DateTime DatumRodjenja
		{
			get
			{
				return this._DatumRodjenja;
			}
			set
			{
				if ((this._DatumRodjenja != value))
				{
					this.OnDatumRodjenjaChanging(value);
					this.SendPropertyChanging();
					this._DatumRodjenja = value;
					this.SendPropertyChanged("DatumRodjenja");
					this.OnDatumRodjenjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojTelefona", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrojTelefona
		{
			get
			{
				return this._BrojTelefona;
			}
			set
			{
				if ((this._BrojTelefona != value))
				{
					this.OnBrojTelefonaChanging(value);
					this.SendPropertyChanging();
					this._BrojTelefona = value;
					this.SendPropertyChanged("BrojTelefona");
					this.OnBrojTelefonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanarinaID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClanarinaID
		{
			get
			{
				return this._ClanarinaID;
			}
			set
			{
				if ((this._ClanarinaID != value))
				{
					if (this._Clanarina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanarinaIDChanging(value);
					this.SendPropertyChanging();
					this._ClanarinaID = value;
					this.SendPropertyChanged("ClanarinaID");
					this.OnClanarinaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumPocetkaClanarine", DbType="Date NOT NULL")]
		public System.DateTime DatumPocetkaClanarine
		{
			get
			{
				return this._DatumPocetkaClanarine;
			}
			set
			{
				if ((this._DatumPocetkaClanarine != value))
				{
					this.OnDatumPocetkaClanarineChanging(value);
					this.SendPropertyChanging();
					this._DatumPocetkaClanarine = value;
					this.SendPropertyChanged("DatumPocetkaClanarine");
					this.OnDatumPocetkaClanarineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumIstekaClanarine", DbType="Date NOT NULL")]
		public System.DateTime DatumIstekaClanarine
		{
			get
			{
				return this._DatumIstekaClanarine;
			}
			set
			{
				if ((this._DatumIstekaClanarine != value))
				{
					this.OnDatumIstekaClanarineChanging(value);
					this.SendPropertyChanging();
					this._DatumIstekaClanarine = value;
					this.SendPropertyChanged("DatumIstekaClanarine");
					this.OnDatumIstekaClanarineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojTermina", DbType="Int NOT NULL")]
		public int BrojTermina
		{
			get
			{
				return this._BrojTermina;
			}
			set
			{
				if ((this._BrojTermina != value))
				{
					this.OnBrojTerminaChanging(value);
					this.SendPropertyChanging();
					this._BrojTermina = value;
					this.SendPropertyChanged("BrojTermina");
					this.OnBrojTerminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klijent_Racun", Storage="_Racuns", ThisKey="KlijentID", OtherKey="KlijentID")]
		public EntitySet<Racun> Racuns
		{
			get
			{
				return this._Racuns;
			}
			set
			{
				this._Racuns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clanarina_Klijent", Storage="_Clanarina", ThisKey="ClanarinaID", OtherKey="ClanarinaID", IsForeignKey=true)]
		public Clanarina Clanarina
		{
			get
			{
				return this._Clanarina.Entity;
			}
			set
			{
				Clanarina previousValue = this._Clanarina.Entity;
				if (((previousValue != value) 
							|| (this._Clanarina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clanarina.Entity = null;
						previousValue.Klijents.Remove(this);
					}
					this._Clanarina.Entity = value;
					if ((value != null))
					{
						value.Klijents.Add(this);
						this._ClanarinaID = value.ClanarinaID;
					}
					else
					{
						this._ClanarinaID = default(string);
					}
					this.SendPropertyChanged("Clanarina");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Klijent = this;
		}
		
		private void detach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Klijent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Porudzbenica")]
	public partial class Porudzbenica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PorudzbenicaID;
		
		private System.DateTime _DatumKreiranja;
		
		private double _CenaPorudzbenice;
		
		private string _RadnikID;
		
		private string _DobavljacID;
		
		private EntitySet<StavkaPorudzbenice> _StavkaPorudzbenices;
		
		private EntityRef<Dobavljac> _Dobavljac;
		
		private EntityRef<Radnik> _Radnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPorudzbenicaIDChanging(int value);
    partial void OnPorudzbenicaIDChanged();
    partial void OnDatumKreiranjaChanging(System.DateTime value);
    partial void OnDatumKreiranjaChanged();
    partial void OnCenaPorudzbeniceChanging(double value);
    partial void OnCenaPorudzbeniceChanged();
    partial void OnRadnikIDChanging(string value);
    partial void OnRadnikIDChanged();
    partial void OnDobavljacIDChanging(string value);
    partial void OnDobavljacIDChanged();
    #endregion
		
		public Porudzbenica()
		{
			this._StavkaPorudzbenices = new EntitySet<StavkaPorudzbenice>(new Action<StavkaPorudzbenice>(this.attach_StavkaPorudzbenices), new Action<StavkaPorudzbenice>(this.detach_StavkaPorudzbenices));
			this._Dobavljac = default(EntityRef<Dobavljac>);
			this._Radnik = default(EntityRef<Radnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorudzbenicaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PorudzbenicaID
		{
			get
			{
				return this._PorudzbenicaID;
			}
			set
			{
				if ((this._PorudzbenicaID != value))
				{
					this.OnPorudzbenicaIDChanging(value);
					this.SendPropertyChanging();
					this._PorudzbenicaID = value;
					this.SendPropertyChanged("PorudzbenicaID");
					this.OnPorudzbenicaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumKreiranja", DbType="Date NOT NULL")]
		public System.DateTime DatumKreiranja
		{
			get
			{
				return this._DatumKreiranja;
			}
			set
			{
				if ((this._DatumKreiranja != value))
				{
					this.OnDatumKreiranjaChanging(value);
					this.SendPropertyChanging();
					this._DatumKreiranja = value;
					this.SendPropertyChanged("DatumKreiranja");
					this.OnDatumKreiranjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaPorudzbenice", DbType="Float NOT NULL")]
		public double CenaPorudzbenice
		{
			get
			{
				return this._CenaPorudzbenice;
			}
			set
			{
				if ((this._CenaPorudzbenice != value))
				{
					this.OnCenaPorudzbeniceChanging(value);
					this.SendPropertyChanging();
					this._CenaPorudzbenice = value;
					this.SendPropertyChanged("CenaPorudzbenice");
					this.OnCenaPorudzbeniceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadnikID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RadnikID
		{
			get
			{
				return this._RadnikID;
			}
			set
			{
				if ((this._RadnikID != value))
				{
					if (this._Radnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnikIDChanging(value);
					this.SendPropertyChanging();
					this._RadnikID = value;
					this.SendPropertyChanged("RadnikID");
					this.OnRadnikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DobavljacID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DobavljacID
		{
			get
			{
				return this._DobavljacID;
			}
			set
			{
				if ((this._DobavljacID != value))
				{
					if (this._Dobavljac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDobavljacIDChanging(value);
					this.SendPropertyChanging();
					this._DobavljacID = value;
					this.SendPropertyChanged("DobavljacID");
					this.OnDobavljacIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Porudzbenica_StavkaPorudzbenice", Storage="_StavkaPorudzbenices", ThisKey="PorudzbenicaID", OtherKey="PorudzbenicaID")]
		public EntitySet<StavkaPorudzbenice> StavkaPorudzbenices
		{
			get
			{
				return this._StavkaPorudzbenices;
			}
			set
			{
				this._StavkaPorudzbenices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dobavljac_Porudzbenica", Storage="_Dobavljac", ThisKey="DobavljacID", OtherKey="DobavljacID", IsForeignKey=true)]
		public Dobavljac Dobavljac
		{
			get
			{
				return this._Dobavljac.Entity;
			}
			set
			{
				Dobavljac previousValue = this._Dobavljac.Entity;
				if (((previousValue != value) 
							|| (this._Dobavljac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dobavljac.Entity = null;
						previousValue.Porudzbenicas.Remove(this);
					}
					this._Dobavljac.Entity = value;
					if ((value != null))
					{
						value.Porudzbenicas.Add(this);
						this._DobavljacID = value.DobavljacID;
					}
					else
					{
						this._DobavljacID = default(string);
					}
					this.SendPropertyChanged("Dobavljac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Radnik_Porudzbenica", Storage="_Radnik", ThisKey="RadnikID", OtherKey="RadnikID", IsForeignKey=true)]
		public Radnik Radnik
		{
			get
			{
				return this._Radnik.Entity;
			}
			set
			{
				Radnik previousValue = this._Radnik.Entity;
				if (((previousValue != value) 
							|| (this._Radnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Radnik.Entity = null;
						previousValue.Porudzbenicas.Remove(this);
					}
					this._Radnik.Entity = value;
					if ((value != null))
					{
						value.Porudzbenicas.Add(this);
						this._RadnikID = value.RadnikID;
					}
					else
					{
						this._RadnikID = default(string);
					}
					this.SendPropertyChanged("Radnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaPorudzbenices(StavkaPorudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Porudzbenica = this;
		}
		
		private void detach_StavkaPorudzbenices(StavkaPorudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Porudzbenica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proizvod")]
	public partial class Proizvod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProizvodID;
		
		private string _NazivProizvoda;
		
		private int _Kolicina;
		
		private double _NabavnaCena;
		
		private double _ProdajnaCena;
		
		private EntitySet<StavkaPorudzbenice> _StavkaPorudzbenices;
		
		private EntitySet<StavkaRacuna> _StavkaRacunas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProizvodIDChanging(string value);
    partial void OnProizvodIDChanged();
    partial void OnNazivProizvodaChanging(string value);
    partial void OnNazivProizvodaChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    partial void OnNabavnaCenaChanging(double value);
    partial void OnNabavnaCenaChanged();
    partial void OnProdajnaCenaChanging(double value);
    partial void OnProdajnaCenaChanged();
    #endregion
		
		public Proizvod()
		{
			this._StavkaPorudzbenices = new EntitySet<StavkaPorudzbenice>(new Action<StavkaPorudzbenice>(this.attach_StavkaPorudzbenices), new Action<StavkaPorudzbenice>(this.detach_StavkaPorudzbenices));
			this._StavkaRacunas = new EntitySet<StavkaRacuna>(new Action<StavkaRacuna>(this.attach_StavkaRacunas), new Action<StavkaRacuna>(this.detach_StavkaRacunas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvodID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProizvodID
		{
			get
			{
				return this._ProizvodID;
			}
			set
			{
				if ((this._ProizvodID != value))
				{
					this.OnProizvodIDChanging(value);
					this.SendPropertyChanging();
					this._ProizvodID = value;
					this.SendPropertyChanged("ProizvodID");
					this.OnProizvodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivProizvoda", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivProizvoda
		{
			get
			{
				return this._NazivProizvoda;
			}
			set
			{
				if ((this._NazivProizvoda != value))
				{
					this.OnNazivProizvodaChanging(value);
					this.SendPropertyChanging();
					this._NazivProizvoda = value;
					this.SendPropertyChanged("NazivProizvoda");
					this.OnNazivProizvodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NabavnaCena", DbType="Float NOT NULL")]
		public double NabavnaCena
		{
			get
			{
				return this._NabavnaCena;
			}
			set
			{
				if ((this._NabavnaCena != value))
				{
					this.OnNabavnaCenaChanging(value);
					this.SendPropertyChanging();
					this._NabavnaCena = value;
					this.SendPropertyChanged("NabavnaCena");
					this.OnNabavnaCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdajnaCena", DbType="Float NOT NULL")]
		public double ProdajnaCena
		{
			get
			{
				return this._ProdajnaCena;
			}
			set
			{
				if ((this._ProdajnaCena != value))
				{
					this.OnProdajnaCenaChanging(value);
					this.SendPropertyChanging();
					this._ProdajnaCena = value;
					this.SendPropertyChanged("ProdajnaCena");
					this.OnProdajnaCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaPorudzbenice", Storage="_StavkaPorudzbenices", ThisKey="ProizvodID", OtherKey="ProizvodID")]
		public EntitySet<StavkaPorudzbenice> StavkaPorudzbenices
		{
			get
			{
				return this._StavkaPorudzbenices;
			}
			set
			{
				this._StavkaPorudzbenices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaRacuna", Storage="_StavkaRacunas", ThisKey="ProizvodID", OtherKey="ProizvodID")]
		public EntitySet<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this._StavkaRacunas;
			}
			set
			{
				this._StavkaRacunas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaPorudzbenices(StavkaPorudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = this;
		}
		
		private void detach_StavkaPorudzbenices(StavkaPorudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = null;
		}
		
		private void attach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = this;
		}
		
		private void detach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Racun")]
	public partial class Racun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RacunID;
		
		private System.DateTime _DatumKreiranja;
		
		private double _CenaRacuna;
		
		private int _KlijentID;
		
		private bool _Uknjizen;
		
		private EntitySet<StavkaRacuna> _StavkaRacunas;
		
		private EntityRef<Klijent> _Klijent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRacunIDChanging(int value);
    partial void OnRacunIDChanged();
    partial void OnDatumKreiranjaChanging(System.DateTime value);
    partial void OnDatumKreiranjaChanged();
    partial void OnCenaRacunaChanging(double value);
    partial void OnCenaRacunaChanged();
    partial void OnKlijentIDChanging(int value);
    partial void OnKlijentIDChanged();
    partial void OnUknjizenChanging(bool value);
    partial void OnUknjizenChanged();
    #endregion
		
		public Racun()
		{
			this._StavkaRacunas = new EntitySet<StavkaRacuna>(new Action<StavkaRacuna>(this.attach_StavkaRacunas), new Action<StavkaRacuna>(this.detach_StavkaRacunas));
			this._Klijent = default(EntityRef<Klijent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RacunID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RacunID
		{
			get
			{
				return this._RacunID;
			}
			set
			{
				if ((this._RacunID != value))
				{
					this.OnRacunIDChanging(value);
					this.SendPropertyChanging();
					this._RacunID = value;
					this.SendPropertyChanged("RacunID");
					this.OnRacunIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumKreiranja", DbType="Date NOT NULL")]
		public System.DateTime DatumKreiranja
		{
			get
			{
				return this._DatumKreiranja;
			}
			set
			{
				if ((this._DatumKreiranja != value))
				{
					this.OnDatumKreiranjaChanging(value);
					this.SendPropertyChanging();
					this._DatumKreiranja = value;
					this.SendPropertyChanged("DatumKreiranja");
					this.OnDatumKreiranjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaRacuna", DbType="Float NOT NULL")]
		public double CenaRacuna
		{
			get
			{
				return this._CenaRacuna;
			}
			set
			{
				if ((this._CenaRacuna != value))
				{
					this.OnCenaRacunaChanging(value);
					this.SendPropertyChanging();
					this._CenaRacuna = value;
					this.SendPropertyChanged("CenaRacuna");
					this.OnCenaRacunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlijentID", DbType="Int NOT NULL")]
		public int KlijentID
		{
			get
			{
				return this._KlijentID;
			}
			set
			{
				if ((this._KlijentID != value))
				{
					if (this._Klijent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlijentIDChanging(value);
					this.SendPropertyChanging();
					this._KlijentID = value;
					this.SendPropertyChanged("KlijentID");
					this.OnKlijentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uknjizen", DbType="Bit NOT NULL")]
		public bool Uknjizen
		{
			get
			{
				return this._Uknjizen;
			}
			set
			{
				if ((this._Uknjizen != value))
				{
					this.OnUknjizenChanging(value);
					this.SendPropertyChanging();
					this._Uknjizen = value;
					this.SendPropertyChanged("Uknjizen");
					this.OnUknjizenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Racun_StavkaRacuna", Storage="_StavkaRacunas", ThisKey="RacunID", OtherKey="RacunID")]
		public EntitySet<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this._StavkaRacunas;
			}
			set
			{
				this._StavkaRacunas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klijent_Racun", Storage="_Klijent", ThisKey="KlijentID", OtherKey="KlijentID", IsForeignKey=true)]
		public Klijent Klijent
		{
			get
			{
				return this._Klijent.Entity;
			}
			set
			{
				Klijent previousValue = this._Klijent.Entity;
				if (((previousValue != value) 
							|| (this._Klijent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klijent.Entity = null;
						previousValue.Racuns.Remove(this);
					}
					this._Klijent.Entity = value;
					if ((value != null))
					{
						value.Racuns.Add(this);
						this._KlijentID = value.KlijentID;
					}
					else
					{
						this._KlijentID = default(int);
					}
					this.SendPropertyChanged("Klijent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Racun = this;
		}
		
		private void detach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Racun = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Radnik")]
	public partial class Radnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RadnikID;
		
		private string _Ime;
		
		private string _Prezime;
		
		private string _Email;
		
		private string _Sifra;
		
		private System.DateTime _DatumRodjenja;
		
		private string _Adresa;
		
		private string _BrojTelefona;
		
		private EntitySet<Porudzbenica> _Porudzbenicas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadnikIDChanging(string value);
    partial void OnRadnikIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnDatumRodjenjaChanging(System.DateTime value);
    partial void OnDatumRodjenjaChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnBrojTelefonaChanging(string value);
    partial void OnBrojTelefonaChanged();
    #endregion
		
		public Radnik()
		{
			this._Porudzbenicas = new EntitySet<Porudzbenica>(new Action<Porudzbenica>(this.attach_Porudzbenicas), new Action<Porudzbenica>(this.detach_Porudzbenicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadnikID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RadnikID
		{
			get
			{
				return this._RadnikID;
			}
			set
			{
				if ((this._RadnikID != value))
				{
					this.OnRadnikIDChanging(value);
					this.SendPropertyChanging();
					this._RadnikID = value;
					this.SendPropertyChanged("RadnikID");
					this.OnRadnikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumRodjenja", DbType="Date NOT NULL")]
		public System.DateTime DatumRodjenja
		{
			get
			{
				return this._DatumRodjenja;
			}
			set
			{
				if ((this._DatumRodjenja != value))
				{
					this.OnDatumRodjenjaChanging(value);
					this.SendPropertyChanging();
					this._DatumRodjenja = value;
					this.SendPropertyChanged("DatumRodjenja");
					this.OnDatumRodjenjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojTelefona", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrojTelefona
		{
			get
			{
				return this._BrojTelefona;
			}
			set
			{
				if ((this._BrojTelefona != value))
				{
					this.OnBrojTelefonaChanging(value);
					this.SendPropertyChanging();
					this._BrojTelefona = value;
					this.SendPropertyChanged("BrojTelefona");
					this.OnBrojTelefonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Radnik_Porudzbenica", Storage="_Porudzbenicas", ThisKey="RadnikID", OtherKey="RadnikID")]
		public EntitySet<Porudzbenica> Porudzbenicas
		{
			get
			{
				return this._Porudzbenicas;
			}
			set
			{
				this._Porudzbenicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Porudzbenicas(Porudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = this;
		}
		
		private void detach_Porudzbenicas(Porudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaPorudzbenice")]
	public partial class StavkaPorudzbenice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PorudzbenicaID;
		
		private int _StavkaID;
		
		private string _ProizvodID;
		
		private string _NazivStavke;
		
		private double _CenaStavke;
		
		private int _Kolicina;
		
		private EntityRef<Porudzbenica> _Porudzbenica;
		
		private EntityRef<Proizvod> _Proizvod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPorudzbenicaIDChanging(int value);
    partial void OnPorudzbenicaIDChanged();
    partial void OnStavkaIDChanging(int value);
    partial void OnStavkaIDChanged();
    partial void OnProizvodIDChanging(string value);
    partial void OnProizvodIDChanged();
    partial void OnNazivStavkeChanging(string value);
    partial void OnNazivStavkeChanged();
    partial void OnCenaStavkeChanging(double value);
    partial void OnCenaStavkeChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    #endregion
		
		public StavkaPorudzbenice()
		{
			this._Porudzbenica = default(EntityRef<Porudzbenica>);
			this._Proizvod = default(EntityRef<Proizvod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorudzbenicaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PorudzbenicaID
		{
			get
			{
				return this._PorudzbenicaID;
			}
			set
			{
				if ((this._PorudzbenicaID != value))
				{
					if (this._Porudzbenica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPorudzbenicaIDChanging(value);
					this.SendPropertyChanging();
					this._PorudzbenicaID = value;
					this.SendPropertyChanged("PorudzbenicaID");
					this.OnPorudzbenicaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StavkaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StavkaID
		{
			get
			{
				return this._StavkaID;
			}
			set
			{
				if ((this._StavkaID != value))
				{
					this.OnStavkaIDChanging(value);
					this.SendPropertyChanging();
					this._StavkaID = value;
					this.SendPropertyChanged("StavkaID");
					this.OnStavkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvodID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProizvodID
		{
			get
			{
				return this._ProizvodID;
			}
			set
			{
				if ((this._ProizvodID != value))
				{
					if (this._Proizvod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodIDChanging(value);
					this.SendPropertyChanging();
					this._ProizvodID = value;
					this.SendPropertyChanged("ProizvodID");
					this.OnProizvodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivStavke", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivStavke
		{
			get
			{
				return this._NazivStavke;
			}
			set
			{
				if ((this._NazivStavke != value))
				{
					this.OnNazivStavkeChanging(value);
					this.SendPropertyChanging();
					this._NazivStavke = value;
					this.SendPropertyChanged("NazivStavke");
					this.OnNazivStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaStavke", DbType="Float NOT NULL")]
		public double CenaStavke
		{
			get
			{
				return this._CenaStavke;
			}
			set
			{
				if ((this._CenaStavke != value))
				{
					this.OnCenaStavkeChanging(value);
					this.SendPropertyChanging();
					this._CenaStavke = value;
					this.SendPropertyChanged("CenaStavke");
					this.OnCenaStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Porudzbenica_StavkaPorudzbenice", Storage="_Porudzbenica", ThisKey="PorudzbenicaID", OtherKey="PorudzbenicaID", IsForeignKey=true)]
		public Porudzbenica Porudzbenica
		{
			get
			{
				return this._Porudzbenica.Entity;
			}
			set
			{
				Porudzbenica previousValue = this._Porudzbenica.Entity;
				if (((previousValue != value) 
							|| (this._Porudzbenica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Porudzbenica.Entity = null;
						previousValue.StavkaPorudzbenices.Remove(this);
					}
					this._Porudzbenica.Entity = value;
					if ((value != null))
					{
						value.StavkaPorudzbenices.Add(this);
						this._PorudzbenicaID = value.PorudzbenicaID;
					}
					else
					{
						this._PorudzbenicaID = default(int);
					}
					this.SendPropertyChanged("Porudzbenica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaPorudzbenice", Storage="_Proizvod", ThisKey="ProizvodID", OtherKey="ProizvodID", IsForeignKey=true)]
		public Proizvod Proizvod
		{
			get
			{
				return this._Proizvod.Entity;
			}
			set
			{
				Proizvod previousValue = this._Proizvod.Entity;
				if (((previousValue != value) 
							|| (this._Proizvod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvod.Entity = null;
						previousValue.StavkaPorudzbenices.Remove(this);
					}
					this._Proizvod.Entity = value;
					if ((value != null))
					{
						value.StavkaPorudzbenices.Add(this);
						this._ProizvodID = value.ProizvodID;
					}
					else
					{
						this._ProizvodID = default(string);
					}
					this.SendPropertyChanged("Proizvod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaRacuna")]
	public partial class StavkaRacuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RacunID;
		
		private int _StavkaID;
		
		private string _ProizvodID;
		
		private string _NazivStavke;
		
		private double _CenaStavke;
		
		private int _Kolicina;
		
		private EntityRef<Proizvod> _Proizvod;
		
		private EntityRef<Racun> _Racun;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRacunIDChanging(int value);
    partial void OnRacunIDChanged();
    partial void OnStavkaIDChanging(int value);
    partial void OnStavkaIDChanged();
    partial void OnProizvodIDChanging(string value);
    partial void OnProizvodIDChanged();
    partial void OnNazivStavkeChanging(string value);
    partial void OnNazivStavkeChanged();
    partial void OnCenaStavkeChanging(double value);
    partial void OnCenaStavkeChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    #endregion
		
		public StavkaRacuna()
		{
			this._Proizvod = default(EntityRef<Proizvod>);
			this._Racun = default(EntityRef<Racun>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RacunID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RacunID
		{
			get
			{
				return this._RacunID;
			}
			set
			{
				if ((this._RacunID != value))
				{
					if (this._Racun.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRacunIDChanging(value);
					this.SendPropertyChanging();
					this._RacunID = value;
					this.SendPropertyChanged("RacunID");
					this.OnRacunIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StavkaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StavkaID
		{
			get
			{
				return this._StavkaID;
			}
			set
			{
				if ((this._StavkaID != value))
				{
					this.OnStavkaIDChanging(value);
					this.SendPropertyChanging();
					this._StavkaID = value;
					this.SendPropertyChanged("StavkaID");
					this.OnStavkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvodID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProizvodID
		{
			get
			{
				return this._ProizvodID;
			}
			set
			{
				if ((this._ProizvodID != value))
				{
					if (this._Proizvod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodIDChanging(value);
					this.SendPropertyChanging();
					this._ProizvodID = value;
					this.SendPropertyChanged("ProizvodID");
					this.OnProizvodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivStavke", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivStavke
		{
			get
			{
				return this._NazivStavke;
			}
			set
			{
				if ((this._NazivStavke != value))
				{
					this.OnNazivStavkeChanging(value);
					this.SendPropertyChanging();
					this._NazivStavke = value;
					this.SendPropertyChanged("NazivStavke");
					this.OnNazivStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaStavke", DbType="Float NOT NULL")]
		public double CenaStavke
		{
			get
			{
				return this._CenaStavke;
			}
			set
			{
				if ((this._CenaStavke != value))
				{
					this.OnCenaStavkeChanging(value);
					this.SendPropertyChanging();
					this._CenaStavke = value;
					this.SendPropertyChanged("CenaStavke");
					this.OnCenaStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaRacuna", Storage="_Proizvod", ThisKey="ProizvodID", OtherKey="ProizvodID", IsForeignKey=true)]
		public Proizvod Proizvod
		{
			get
			{
				return this._Proizvod.Entity;
			}
			set
			{
				Proizvod previousValue = this._Proizvod.Entity;
				if (((previousValue != value) 
							|| (this._Proizvod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvod.Entity = null;
						previousValue.StavkaRacunas.Remove(this);
					}
					this._Proizvod.Entity = value;
					if ((value != null))
					{
						value.StavkaRacunas.Add(this);
						this._ProizvodID = value.ProizvodID;
					}
					else
					{
						this._ProizvodID = default(string);
					}
					this.SendPropertyChanged("Proizvod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Racun_StavkaRacuna", Storage="_Racun", ThisKey="RacunID", OtherKey="RacunID", IsForeignKey=true)]
		public Racun Racun
		{
			get
			{
				return this._Racun.Entity;
			}
			set
			{
				Racun previousValue = this._Racun.Entity;
				if (((previousValue != value) 
							|| (this._Racun.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Racun.Entity = null;
						previousValue.StavkaRacunas.Remove(this);
					}
					this._Racun.Entity = value;
					if ((value != null))
					{
						value.StavkaRacunas.Add(this);
						this._RacunID = value.RacunID;
					}
					else
					{
						this._RacunID = default(int);
					}
					this.SendPropertyChanged("Racun");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
